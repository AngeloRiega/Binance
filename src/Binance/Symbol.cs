// ReSharper disable InconsistentNaming
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Binance.Cache;

namespace Binance
{
    /// <summary>
    /// Defined symbols (for convenience/reference only).
    /// </summary>
    /// <remarks>File generated by BinanceCodeGenerator tool.</remarks>
    public sealed class Symbol : IComparable<Symbol>, IEquatable<Symbol>
    {
        #region Public Constants

        /// <summary>
        /// When the symbols (currency pairs) were last updated.
        /// </summary>
        public static readonly long LastUpdateAt = 1538198581399;

        // BNB
        public static Symbol ADA_BNB => Cache.Get("ADABNB");
        public static Symbol ADX_BNB => Cache.Get("ADXBNB");
        public static Symbol AE_BNB => Cache.Get("AEBNB");
        public static Symbol AGI_BNB => Cache.Get("AGIBNB");
        public static Symbol AION_BNB => Cache.Get("AIONBNB");
        public static Symbol AMB_BNB => Cache.Get("AMBBNB");
        public static Symbol APPC_BNB => Cache.Get("APPCBNB");
        public static Symbol ARDR_BNB => Cache.Get("ARDRBNB");
        public static Symbol BAT_BNB => Cache.Get("BATBNB");
        public static Symbol BCC_BNB => Cache.Get("BCCBNB");
        public static Symbol BCN_BNB => Cache.Get("BCNBNB");
        public static Symbol BCPT_BNB => Cache.Get("BCPTBNB");
        public static Symbol BLZ_BNB => Cache.Get("BLZBNB");
        public static Symbol BRD_BNB => Cache.Get("BRDBNB");
        public static Symbol BTS_BNB => Cache.Get("BTSBNB");
        public static Symbol CMT_BNB => Cache.Get("CMTBNB");
        public static Symbol CND_BNB => Cache.Get("CNDBNB");
        public static Symbol CVC_BNB => Cache.Get("CVCBNB");
        public static Symbol DLT_BNB => Cache.Get("DLTBNB");
        public static Symbol ENJ_BNB => Cache.Get("ENJBNB");
        public static Symbol EOS_BNB => Cache.Get("EOSBNB");
        public static Symbol ETC_BNB => Cache.Get("ETCBNB");
        public static Symbol GNT_BNB => Cache.Get("GNTBNB");
        public static Symbol GO_BNB => Cache.Get("GOBNB");
        public static Symbol GTO_BNB => Cache.Get("GTOBNB");
        public static Symbol ICX_BNB => Cache.Get("ICXBNB");
        public static Symbol IOTA_BNB => Cache.Get("IOTABNB");
        public static Symbol LOOM_BNB => Cache.Get("LOOMBNB");
        public static Symbol LSK_BNB => Cache.Get("LSKBNB");
        public static Symbol LTC_BNB => Cache.Get("LTCBNB");
        public static Symbol MCO_BNB => Cache.Get("MCOBNB");
        public static Symbol MFT_BNB => Cache.Get("MFTBNB");
        public static Symbol NANO_BNB => Cache.Get("NANOBNB");
        public static Symbol NAS_BNB => Cache.Get("NASBNB");
        public static Symbol NAV_BNB => Cache.Get("NAVBNB");
        public static Symbol NCASH_BNB => Cache.Get("NCASHBNB");
        public static Symbol NEBL_BNB => Cache.Get("NEBLBNB");
        public static Symbol NEO_BNB => Cache.Get("NEOBNB");
        public static Symbol NULS_BNB => Cache.Get("NULSBNB");
        public static Symbol NXS_BNB => Cache.Get("NXSBNB");
        public static Symbol ONT_BNB => Cache.Get("ONTBNB");
        public static Symbol OST_BNB => Cache.Get("OSTBNB");
        public static Symbol PHX_BNB => Cache.Get("PHXBNB");
        public static Symbol PIVX_BNB => Cache.Get("PIVXBNB");
        public static Symbol POA_BNB => Cache.Get("POABNB");
        public static Symbol POLY_BNB => Cache.Get("POLYBNB");
        public static Symbol POWR_BNB => Cache.Get("POWRBNB");
        public static Symbol QLC_BNB => Cache.Get("QLCBNB");
        public static Symbol QSP_BNB => Cache.Get("QSPBNB");
        public static Symbol QTUM_BNB => Cache.Get("QTUMBNB");
        public static Symbol RCN_BNB => Cache.Get("RCNBNB");
        public static Symbol RDN_BNB => Cache.Get("RDNBNB");
        public static Symbol REP_BNB => Cache.Get("REPBNB");
        public static Symbol RLC_BNB => Cache.Get("RLCBNB");
        public static Symbol RPX_BNB => Cache.Get("RPXBNB");
        public static Symbol SC_BNB => Cache.Get("SCBNB");
        public static Symbol SKY_BNB => Cache.Get("SKYBNB");
        public static Symbol STEEM_BNB => Cache.Get("STEEMBNB");
        public static Symbol STORM_BNB => Cache.Get("STORMBNB");
        public static Symbol SYS_BNB => Cache.Get("SYSBNB");
        public static Symbol THETA_BNB => Cache.Get("THETABNB");
        public static Symbol TRIG_BNB => Cache.Get("TRIGBNB");
        public static Symbol TRX_BNB => Cache.Get("TRXBNB");
        public static Symbol TUSD_BNB => Cache.Get("TUSDBNB");
        public static Symbol VEN_BNB => Cache.Get("VENBNB");
        public static Symbol VET_BNB => Cache.Get("VETBNB");
        public static Symbol VIA_BNB => Cache.Get("VIABNB");
        public static Symbol WABI_BNB => Cache.Get("WABIBNB");
        public static Symbol WAN_BNB => Cache.Get("WANBNB");
        public static Symbol WAVES_BNB => Cache.Get("WAVESBNB");
        public static Symbol WTC_BNB => Cache.Get("WTCBNB");
        public static Symbol XEM_BNB => Cache.Get("XEMBNB");
        public static Symbol XLM_BNB => Cache.Get("XLMBNB");
        public static Symbol XRP_BNB => Cache.Get("XRPBNB");
        public static Symbol XZC_BNB => Cache.Get("XZCBNB");
        public static Symbol YOYO_BNB => Cache.Get("YOYOBNB");
        public static Symbol ZEN_BNB => Cache.Get("ZENBNB");
        public static Symbol ZIL_BNB => Cache.Get("ZILBNB");

        // BTC
        public static Symbol ADA_BTC => Cache.Get("ADABTC");
        public static Symbol ADX_BTC => Cache.Get("ADXBTC");
        public static Symbol AE_BTC => Cache.Get("AEBTC");
        public static Symbol AGI_BTC => Cache.Get("AGIBTC");
        public static Symbol AION_BTC => Cache.Get("AIONBTC");
        public static Symbol AMB_BTC => Cache.Get("AMBBTC");
        public static Symbol APPC_BTC => Cache.Get("APPCBTC");
        public static Symbol ARDR_BTC => Cache.Get("ARDRBTC");
        public static Symbol ARK_BTC => Cache.Get("ARKBTC");
        public static Symbol ARN_BTC => Cache.Get("ARNBTC");
        public static Symbol AST_BTC => Cache.Get("ASTBTC");
        public static Symbol BAT_BTC => Cache.Get("BATBTC");
        public static Symbol BCC_BTC => Cache.Get("BCCBTC");
        public static Symbol BCD_BTC => Cache.Get("BCDBTC");
        public static Symbol BCN_BTC => Cache.Get("BCNBTC");
        public static Symbol BCPT_BTC => Cache.Get("BCPTBTC");
        public static Symbol BLZ_BTC => Cache.Get("BLZBTC");
        public static Symbol BNB_BTC => Cache.Get("BNBBTC");
        public static Symbol BNT_BTC => Cache.Get("BNTBTC");
        public static Symbol BQX_BTC => Cache.Get("BQXBTC");
        public static Symbol BRD_BTC => Cache.Get("BRDBTC");
        public static Symbol BTG_BTC => Cache.Get("BTGBTC");
        public static Symbol BTS_BTC => Cache.Get("BTSBTC");
        public static Symbol CDT_BTC => Cache.Get("CDTBTC");
        public static Symbol CHAT_BTC => Cache.Get("CHATBTC");
        public static Symbol CLOAK_BTC => Cache.Get("CLOAKBTC");
        public static Symbol CMT_BTC => Cache.Get("CMTBTC");
        public static Symbol CND_BTC => Cache.Get("CNDBTC");
        public static Symbol CVC_BTC => Cache.Get("CVCBTC");
        public static Symbol DASH_BTC => Cache.Get("DASHBTC");
        public static Symbol DATA_BTC => Cache.Get("DATABTC");
        public static Symbol DENT_BTC => Cache.Get("DENTBTC");
        public static Symbol DGD_BTC => Cache.Get("DGDBTC");
        public static Symbol DLT_BTC => Cache.Get("DLTBTC");
        public static Symbol DNT_BTC => Cache.Get("DNTBTC");
        public static Symbol DOCK_BTC => Cache.Get("DOCKBTC");
        public static Symbol EDO_BTC => Cache.Get("EDOBTC");
        public static Symbol ELF_BTC => Cache.Get("ELFBTC");
        public static Symbol ENG_BTC => Cache.Get("ENGBTC");
        public static Symbol ENJ_BTC => Cache.Get("ENJBTC");
        public static Symbol EOS_BTC => Cache.Get("EOSBTC");
        public static Symbol ETC_BTC => Cache.Get("ETCBTC");
        public static Symbol ETH_BTC => Cache.Get("ETHBTC");
        public static Symbol EVX_BTC => Cache.Get("EVXBTC");
        public static Symbol FUEL_BTC => Cache.Get("FUELBTC");
        public static Symbol FUN_BTC => Cache.Get("FUNBTC");
        public static Symbol GAS_BTC => Cache.Get("GASBTC");
        public static Symbol GNT_BTC => Cache.Get("GNTBTC");
        public static Symbol GO_BTC => Cache.Get("GOBTC");
        public static Symbol GRS_BTC => Cache.Get("GRSBTC");
        public static Symbol GTO_BTC => Cache.Get("GTOBTC");
        public static Symbol GVT_BTC => Cache.Get("GVTBTC");
        public static Symbol GXS_BTC => Cache.Get("GXSBTC");
        public static Symbol HC_BTC => Cache.Get("HCBTC");
        public static Symbol HOT_BTC => Cache.Get("HOTBTC");
        public static Symbol HSR_BTC => Cache.Get("HSRBTC");
        public static Symbol ICN_BTC => Cache.Get("ICNBTC");
        public static Symbol ICX_BTC => Cache.Get("ICXBTC");
        public static Symbol INS_BTC => Cache.Get("INSBTC");
        public static Symbol IOST_BTC => Cache.Get("IOSTBTC");
        public static Symbol IOTA_BTC => Cache.Get("IOTABTC");
        public static Symbol IOTX_BTC => Cache.Get("IOTXBTC");
        public static Symbol KEY_BTC => Cache.Get("KEYBTC");
        public static Symbol KMD_BTC => Cache.Get("KMDBTC");
        public static Symbol KNC_BTC => Cache.Get("KNCBTC");
        public static Symbol LEND_BTC => Cache.Get("LENDBTC");
        public static Symbol LINK_BTC => Cache.Get("LINKBTC");
        public static Symbol LOOM_BTC => Cache.Get("LOOMBTC");
        public static Symbol LRC_BTC => Cache.Get("LRCBTC");
        public static Symbol LSK_BTC => Cache.Get("LSKBTC");
        public static Symbol LTC_BTC => Cache.Get("LTCBTC");
        public static Symbol LUN_BTC => Cache.Get("LUNBTC");
        public static Symbol MANA_BTC => Cache.Get("MANABTC");
        public static Symbol MCO_BTC => Cache.Get("MCOBTC");
        public static Symbol MDA_BTC => Cache.Get("MDABTC");
        public static Symbol MFT_BTC => Cache.Get("MFTBTC");
        public static Symbol MOD_BTC => Cache.Get("MODBTC");
        public static Symbol MTH_BTC => Cache.Get("MTHBTC");
        public static Symbol MTL_BTC => Cache.Get("MTLBTC");
        public static Symbol NANO_BTC => Cache.Get("NANOBTC");
        public static Symbol NAS_BTC => Cache.Get("NASBTC");
        public static Symbol NAV_BTC => Cache.Get("NAVBTC");
        public static Symbol NCASH_BTC => Cache.Get("NCASHBTC");
        public static Symbol NEBL_BTC => Cache.Get("NEBLBTC");
        public static Symbol NEO_BTC => Cache.Get("NEOBTC");
        public static Symbol NPXS_BTC => Cache.Get("NPXSBTC");
        public static Symbol NULS_BTC => Cache.Get("NULSBTC");
        public static Symbol NXS_BTC => Cache.Get("NXSBTC");
        public static Symbol OAX_BTC => Cache.Get("OAXBTC");
        public static Symbol OMG_BTC => Cache.Get("OMGBTC");
        public static Symbol ONT_BTC => Cache.Get("ONTBTC");
        public static Symbol OST_BTC => Cache.Get("OSTBTC");
        public static Symbol PHX_BTC => Cache.Get("PHXBTC");
        public static Symbol PIVX_BTC => Cache.Get("PIVXBTC");
        public static Symbol POA_BTC => Cache.Get("POABTC");
        public static Symbol POE_BTC => Cache.Get("POEBTC");
        public static Symbol POLY_BTC => Cache.Get("POLYBTC");
        public static Symbol POWR_BTC => Cache.Get("POWRBTC");
        public static Symbol PPT_BTC => Cache.Get("PPTBTC");
        public static Symbol QKC_BTC => Cache.Get("QKCBTC");
        public static Symbol QLC_BTC => Cache.Get("QLCBTC");
        public static Symbol QSP_BTC => Cache.Get("QSPBTC");
        public static Symbol QTUM_BTC => Cache.Get("QTUMBTC");
        public static Symbol RCN_BTC => Cache.Get("RCNBTC");
        public static Symbol RDN_BTC => Cache.Get("RDNBTC");
        public static Symbol REP_BTC => Cache.Get("REPBTC");
        public static Symbol REQ_BTC => Cache.Get("REQBTC");
        public static Symbol RLC_BTC => Cache.Get("RLCBTC");
        public static Symbol RPX_BTC => Cache.Get("RPXBTC");
        public static Symbol SALT_BTC => Cache.Get("SALTBTC");
        public static Symbol SC_BTC => Cache.Get("SCBTC");
        public static Symbol SKY_BTC => Cache.Get("SKYBTC");
        public static Symbol SNGLS_BTC => Cache.Get("SNGLSBTC");
        public static Symbol SNM_BTC => Cache.Get("SNMBTC");
        public static Symbol SNT_BTC => Cache.Get("SNTBTC");
        public static Symbol STEEM_BTC => Cache.Get("STEEMBTC");
        public static Symbol STORJ_BTC => Cache.Get("STORJBTC");
        public static Symbol STORM_BTC => Cache.Get("STORMBTC");
        public static Symbol STRAT_BTC => Cache.Get("STRATBTC");
        public static Symbol SUB_BTC => Cache.Get("SUBBTC");
        public static Symbol SYS_BTC => Cache.Get("SYSBTC");
        public static Symbol THETA_BTC => Cache.Get("THETABTC");
        public static Symbol TNB_BTC => Cache.Get("TNBBTC");
        public static Symbol TNT_BTC => Cache.Get("TNTBTC");
        public static Symbol TRIG_BTC => Cache.Get("TRIGBTC");
        public static Symbol TRX_BTC => Cache.Get("TRXBTC");
        public static Symbol TUSD_BTC => Cache.Get("TUSDBTC");
        public static Symbol VEN_BTC => Cache.Get("VENBTC");
        public static Symbol VET_BTC => Cache.Get("VETBTC");
        public static Symbol VIA_BTC => Cache.Get("VIABTC");
        public static Symbol VIB_BTC => Cache.Get("VIBBTC");
        public static Symbol VIBE_BTC => Cache.Get("VIBEBTC");
        public static Symbol WABI_BTC => Cache.Get("WABIBTC");
        public static Symbol WAN_BTC => Cache.Get("WANBTC");
        public static Symbol WAVES_BTC => Cache.Get("WAVESBTC");
        public static Symbol WINGS_BTC => Cache.Get("WINGSBTC");
        public static Symbol WPR_BTC => Cache.Get("WPRBTC");
        public static Symbol WTC_BTC => Cache.Get("WTCBTC");
        public static Symbol XEM_BTC => Cache.Get("XEMBTC");
        public static Symbol XLM_BTC => Cache.Get("XLMBTC");
        public static Symbol XMR_BTC => Cache.Get("XMRBTC");
        public static Symbol XRP_BTC => Cache.Get("XRPBTC");
        public static Symbol XVG_BTC => Cache.Get("XVGBTC");
        public static Symbol XZC_BTC => Cache.Get("XZCBTC");
        public static Symbol YOYO_BTC => Cache.Get("YOYOBTC");
        public static Symbol ZEC_BTC => Cache.Get("ZECBTC");
        public static Symbol ZEN_BTC => Cache.Get("ZENBTC");
        public static Symbol ZIL_BTC => Cache.Get("ZILBTC");
        public static Symbol ZRX_BTC => Cache.Get("ZRXBTC");

        // ETH
        public static Symbol ADA_ETH => Cache.Get("ADAETH");
        public static Symbol ADX_ETH => Cache.Get("ADXETH");
        public static Symbol AE_ETH => Cache.Get("AEETH");
        public static Symbol AGI_ETH => Cache.Get("AGIETH");
        public static Symbol AION_ETH => Cache.Get("AIONETH");
        public static Symbol AMB_ETH => Cache.Get("AMBETH");
        public static Symbol APPC_ETH => Cache.Get("APPCETH");
        public static Symbol ARDR_ETH => Cache.Get("ARDRETH");
        public static Symbol ARK_ETH => Cache.Get("ARKETH");
        public static Symbol ARN_ETH => Cache.Get("ARNETH");
        public static Symbol AST_ETH => Cache.Get("ASTETH");
        public static Symbol BAT_ETH => Cache.Get("BATETH");
        public static Symbol BCC_ETH => Cache.Get("BCCETH");
        public static Symbol BCD_ETH => Cache.Get("BCDETH");
        public static Symbol BCN_ETH => Cache.Get("BCNETH");
        public static Symbol BCPT_ETH => Cache.Get("BCPTETH");
        public static Symbol BLZ_ETH => Cache.Get("BLZETH");
        public static Symbol BNB_ETH => Cache.Get("BNBETH");
        public static Symbol BNT_ETH => Cache.Get("BNTETH");
        public static Symbol BQX_ETH => Cache.Get("BQXETH");
        public static Symbol BRD_ETH => Cache.Get("BRDETH");
        public static Symbol BTG_ETH => Cache.Get("BTGETH");
        public static Symbol BTS_ETH => Cache.Get("BTSETH");
        public static Symbol CDT_ETH => Cache.Get("CDTETH");
        public static Symbol CHAT_ETH => Cache.Get("CHATETH");
        public static Symbol CLOAK_ETH => Cache.Get("CLOAKETH");
        public static Symbol CMT_ETH => Cache.Get("CMTETH");
        public static Symbol CND_ETH => Cache.Get("CNDETH");
        public static Symbol CVC_ETH => Cache.Get("CVCETH");
        public static Symbol DASH_ETH => Cache.Get("DASHETH");
        public static Symbol DATA_ETH => Cache.Get("DATAETH");
        public static Symbol DENT_ETH => Cache.Get("DENTETH");
        public static Symbol DGD_ETH => Cache.Get("DGDETH");
        public static Symbol DLT_ETH => Cache.Get("DLTETH");
        public static Symbol DNT_ETH => Cache.Get("DNTETH");
        public static Symbol DOCK_ETH => Cache.Get("DOCKETH");
        public static Symbol EDO_ETH => Cache.Get("EDOETH");
        public static Symbol ELF_ETH => Cache.Get("ELFETH");
        public static Symbol ENG_ETH => Cache.Get("ENGETH");
        public static Symbol ENJ_ETH => Cache.Get("ENJETH");
        public static Symbol EOS_ETH => Cache.Get("EOSETH");
        public static Symbol ETC_ETH => Cache.Get("ETCETH");
        public static Symbol EVX_ETH => Cache.Get("EVXETH");
        public static Symbol FUEL_ETH => Cache.Get("FUELETH");
        public static Symbol FUN_ETH => Cache.Get("FUNETH");
        public static Symbol GNT_ETH => Cache.Get("GNTETH");
        public static Symbol GRS_ETH => Cache.Get("GRSETH");
        public static Symbol GTO_ETH => Cache.Get("GTOETH");
        public static Symbol GVT_ETH => Cache.Get("GVTETH");
        public static Symbol GXS_ETH => Cache.Get("GXSETH");
        public static Symbol HC_ETH => Cache.Get("HCETH");
        public static Symbol HOT_ETH => Cache.Get("HOTETH");
        public static Symbol HSR_ETH => Cache.Get("HSRETH");
        public static Symbol ICN_ETH => Cache.Get("ICNETH");
        public static Symbol ICX_ETH => Cache.Get("ICXETH");
        public static Symbol INS_ETH => Cache.Get("INSETH");
        public static Symbol IOST_ETH => Cache.Get("IOSTETH");
        public static Symbol IOTA_ETH => Cache.Get("IOTAETH");
        public static Symbol IOTX_ETH => Cache.Get("IOTXETH");
        public static Symbol KEY_ETH => Cache.Get("KEYETH");
        public static Symbol KMD_ETH => Cache.Get("KMDETH");
        public static Symbol KNC_ETH => Cache.Get("KNCETH");
        public static Symbol LEND_ETH => Cache.Get("LENDETH");
        public static Symbol LINK_ETH => Cache.Get("LINKETH");
        public static Symbol LOOM_ETH => Cache.Get("LOOMETH");
        public static Symbol LRC_ETH => Cache.Get("LRCETH");
        public static Symbol LSK_ETH => Cache.Get("LSKETH");
        public static Symbol LTC_ETH => Cache.Get("LTCETH");
        public static Symbol LUN_ETH => Cache.Get("LUNETH");
        public static Symbol MANA_ETH => Cache.Get("MANAETH");
        public static Symbol MCO_ETH => Cache.Get("MCOETH");
        public static Symbol MDA_ETH => Cache.Get("MDAETH");
        public static Symbol MFT_ETH => Cache.Get("MFTETH");
        public static Symbol MOD_ETH => Cache.Get("MODETH");
        public static Symbol MTH_ETH => Cache.Get("MTHETH");
        public static Symbol MTL_ETH => Cache.Get("MTLETH");
        public static Symbol NANO_ETH => Cache.Get("NANOETH");
        public static Symbol NAS_ETH => Cache.Get("NASETH");
        public static Symbol NAV_ETH => Cache.Get("NAVETH");
        public static Symbol NCASH_ETH => Cache.Get("NCASHETH");
        public static Symbol NEBL_ETH => Cache.Get("NEBLETH");
        public static Symbol NEO_ETH => Cache.Get("NEOETH");
        public static Symbol NPXS_ETH => Cache.Get("NPXSETH");
        public static Symbol NULS_ETH => Cache.Get("NULSETH");
        public static Symbol NXS_ETH => Cache.Get("NXSETH");
        public static Symbol OAX_ETH => Cache.Get("OAXETH");
        public static Symbol OMG_ETH => Cache.Get("OMGETH");
        public static Symbol ONT_ETH => Cache.Get("ONTETH");
        public static Symbol OST_ETH => Cache.Get("OSTETH");
        public static Symbol PHX_ETH => Cache.Get("PHXETH");
        public static Symbol PIVX_ETH => Cache.Get("PIVXETH");
        public static Symbol POA_ETH => Cache.Get("POAETH");
        public static Symbol POE_ETH => Cache.Get("POEETH");
        public static Symbol POWR_ETH => Cache.Get("POWRETH");
        public static Symbol PPT_ETH => Cache.Get("PPTETH");
        public static Symbol QKC_ETH => Cache.Get("QKCETH");
        public static Symbol QLC_ETH => Cache.Get("QLCETH");
        public static Symbol QSP_ETH => Cache.Get("QSPETH");
        public static Symbol QTUM_ETH => Cache.Get("QTUMETH");
        public static Symbol RCN_ETH => Cache.Get("RCNETH");
        public static Symbol RDN_ETH => Cache.Get("RDNETH");
        public static Symbol REP_ETH => Cache.Get("REPETH");
        public static Symbol REQ_ETH => Cache.Get("REQETH");
        public static Symbol RLC_ETH => Cache.Get("RLCETH");
        public static Symbol RPX_ETH => Cache.Get("RPXETH");
        public static Symbol SALT_ETH => Cache.Get("SALTETH");
        public static Symbol SC_ETH => Cache.Get("SCETH");
        public static Symbol SKY_ETH => Cache.Get("SKYETH");
        public static Symbol SNGLS_ETH => Cache.Get("SNGLSETH");
        public static Symbol SNM_ETH => Cache.Get("SNMETH");
        public static Symbol SNT_ETH => Cache.Get("SNTETH");
        public static Symbol STEEM_ETH => Cache.Get("STEEMETH");
        public static Symbol STORJ_ETH => Cache.Get("STORJETH");
        public static Symbol STORM_ETH => Cache.Get("STORMETH");
        public static Symbol STRAT_ETH => Cache.Get("STRATETH");
        public static Symbol SUB_ETH => Cache.Get("SUBETH");
        public static Symbol SYS_ETH => Cache.Get("SYSETH");
        public static Symbol THETA_ETH => Cache.Get("THETAETH");
        public static Symbol TNB_ETH => Cache.Get("TNBETH");
        public static Symbol TNT_ETH => Cache.Get("TNTETH");
        public static Symbol TRIG_ETH => Cache.Get("TRIGETH");
        public static Symbol TRX_ETH => Cache.Get("TRXETH");
        public static Symbol TUSD_ETH => Cache.Get("TUSDETH");
        public static Symbol VEN_ETH => Cache.Get("VENETH");
        public static Symbol VET_ETH => Cache.Get("VETETH");
        public static Symbol VIA_ETH => Cache.Get("VIAETH");
        public static Symbol VIBE_ETH => Cache.Get("VIBEETH");
        public static Symbol VIB_ETH => Cache.Get("VIBETH");
        public static Symbol WABI_ETH => Cache.Get("WABIETH");
        public static Symbol WAN_ETH => Cache.Get("WANETH");
        public static Symbol WAVES_ETH => Cache.Get("WAVESETH");
        public static Symbol WINGS_ETH => Cache.Get("WINGSETH");
        public static Symbol WPR_ETH => Cache.Get("WPRETH");
        public static Symbol WTC_ETH => Cache.Get("WTCETH");
        public static Symbol XEM_ETH => Cache.Get("XEMETH");
        public static Symbol XLM_ETH => Cache.Get("XLMETH");
        public static Symbol XMR_ETH => Cache.Get("XMRETH");
        public static Symbol XRP_ETH => Cache.Get("XRPETH");
        public static Symbol XVG_ETH => Cache.Get("XVGETH");
        public static Symbol XZC_ETH => Cache.Get("XZCETH");
        public static Symbol YOYO_ETH => Cache.Get("YOYOETH");
        public static Symbol ZEC_ETH => Cache.Get("ZECETH");
        public static Symbol ZEN_ETH => Cache.Get("ZENETH");
        public static Symbol ZIL_ETH => Cache.Get("ZILETH");
        public static Symbol ZRX_ETH => Cache.Get("ZRXETH");

        // USDT
        public static Symbol ADA_USDT => Cache.Get("ADAUSDT");
        public static Symbol BCC_USDT => Cache.Get("BCCUSDT");
        public static Symbol BNB_USDT => Cache.Get("BNBUSDT");
        public static Symbol BTC_USDT => Cache.Get("BTCUSDT");
        public static Symbol EOS_USDT => Cache.Get("EOSUSDT");
        public static Symbol ETC_USDT => Cache.Get("ETCUSDT");
        public static Symbol ETH_USDT => Cache.Get("ETHUSDT");
        public static Symbol ICX_USDT => Cache.Get("ICXUSDT");
        public static Symbol IOTA_USDT => Cache.Get("IOTAUSDT");
        public static Symbol LTC_USDT => Cache.Get("LTCUSDT");
        public static Symbol NEO_USDT => Cache.Get("NEOUSDT");
        public static Symbol NULS_USDT => Cache.Get("NULSUSDT");
        public static Symbol ONT_USDT => Cache.Get("ONTUSDT");
        public static Symbol QTUM_USDT => Cache.Get("QTUMUSDT");
        public static Symbol TRX_USDT => Cache.Get("TRXUSDT");
        public static Symbol TUSD_USDT => Cache.Get("TUSDUSDT");
        public static Symbol VEN_USDT => Cache.Get("VENUSDT");
        public static Symbol VET_USDT => Cache.Get("VETUSDT");
        public static Symbol XLM_USDT => Cache.Get("XLMUSDT");
        public static Symbol XRP_USDT => Cache.Get("XRPUSDT");

        // Redirect (BCH) Bitcoin Cash (BCC = BitConnect)
        public static Symbol BCH_USDT => BCC_USDT;
        public static Symbol BCH_BNB => BCC_BNB;
        public static Symbol BCH_BTC => BCC_BTC;
        public static Symbol BCH_ETH => BCC_ETH;

        #endregion Public Constants

        #region Implicit Operators

        public static bool operator ==(Symbol x, Symbol y) => Equals(x, y);

        public static bool operator !=(Symbol x, Symbol y) => !(x == y);

        public static implicit operator string(Symbol symbol) => symbol?.ToString();

        #endregion Implicit Operators

        #region Public Properties

        /// <summary>
        /// Symbol cache.
        /// </summary>
        public static IObjectCache<Symbol> Cache { get; set; }

        /// <summary>
        /// Get the symbol status.
        /// </summary>
        public SymbolStatus Status { get; }

        /// <summary>
        /// Get the base asset symbol.
        /// </summary>
        public Asset BaseAsset { get; }

        /// <summary>
        /// Get the quote asset symbol.
        /// </summary>
        public Asset QuoteAsset { get; }

        /// <summary>
        /// Get base asset range (min/max quantity and step size).
        /// </summary>
        public InclusiveRange Quantity { get; }

        /// <summary>
        /// Get the quote asset range (min/max price and tick size).
        /// </summary>
        public InclusiveRange Price { get; }

        /// <summary>
        /// Get the minimum notional value (price * quantity).
        /// </summary>
        public decimal NotionalMinimumValue { get; }

        /// <summary>
        /// Get the allowed order types.
        /// </summary>
        public IEnumerable<OrderType> OrderTypes { get; }

        /// <summary>
        /// Get the flag indicating if iceberg orders are allowed.
        /// </summary>
        public bool IsIcebergAllowed { get; }

        #endregion Public Properties

        #region Private Fields

        private readonly string _symbol;

        private static readonly object _sync = new object();

        #endregion Private Fields

        #region Constructors

        static Symbol()
        {
            try
            {
                Cache = new InMemoryCache<Symbol>();

                Cache.Set(
                    new[] {
                        new Symbol(SymbolStatus.Trading, Asset.ADA, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00084000m, 0.08350000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ADA, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000127m, 0.00012620m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ADA, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00003771m, 0.00377020m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ADA, Asset.USDT, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00822000m, 0.82130000m, 0.00001000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ADX, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00197000m, 0.19650000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ADX, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000298m, 0.00029780m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ADX, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00008940m, 0.00893500m, 0.00000010m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.AE, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00994000m, 0.99380000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.AE, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00001510m, 0.00150300m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.AE, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00045000m, 0.04496000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.AGI, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00044000m, 0.04330000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.AGI, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000066m, 0.00006560m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.AGI, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00001966m, 0.00196600m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.AION, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00422000m, 0.42150000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.AION, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00000630m, 0.00062900m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.AION, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00018900m, 0.01881000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.AMB, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00149000m, 0.14810000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.AMB, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000223m, 0.00022300m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.AMB, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00006662m, 0.00666160m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.APPC, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00114000m, 0.11360000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.APPC, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000172m, 0.00017140m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.APPC, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00005140m, 0.00513100m, 0.00000010m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ARDR, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00130000m, 0.12940000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ARDR, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000194m, 0.00019370m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ARDR, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00005781m, 0.00578100m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ARK, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00001080m, 0.00107500m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ARK, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00032600m, 0.03260000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ARN, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000544m, 0.00054380m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ARN, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00016233m, 0.01623280m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.AST, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000120m, 0.00011910m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.AST, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00003560m, 0.00355400m, 0.00000010m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BAT, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00168000m, 0.16770000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BAT, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000252m, 0.00025150m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BAT, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00007530m, 0.00752930m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BCC, Asset.BNB, (0.00001000m, 10000000.00000000m, 0.00001000m), (5.28000000m, 527.50000000m, 0.01000000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BCC, Asset.BTC, (0.00100000m, 100000.00000000m, 0.00100000m), (0.00796300m, 0.79620500m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BCC, Asset.ETH, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.23881000m, 23.88070000m, 0.00001000m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BCC, Asset.USDT, (0.00001000m, 10000000.00000000m, 0.00001000m), (51.76000000m, 5176.00000000m, 0.01000000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BCD, Asset.BTC, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.00002900m, 0.00286000m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BCD, Asset.ETH, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.00086000m, 0.08590000m, 0.00001000m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BCN, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00002400m, 0.00234000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BCN, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000004m, 0.00000350m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BCN, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000105m, 0.00010480m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BCPT, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00119000m, 0.11840000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BCPT, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000179m, 0.00017870m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BCPT, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00005380m, 0.00537930m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BLZ, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00120000m, 0.11940000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BLZ, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000181m, 0.00018070m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BLZ, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00005391m, 0.00539030m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BNB, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00015070m, 0.01506650m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BNB, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00451800m, 0.45175000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BNB, Asset.USDT, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.98180000m, 98.17400000m, 0.00010000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BNT, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00002192m, 0.00219120m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BNT, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00065800m, 0.06580000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BQX, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000511m, 0.00051080m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BQX, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00015320m, 0.01532000m, 0.00000010m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BRD, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00334000m, 0.33340000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BRD, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000503m, 0.00050290m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BRD, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00015140m, 0.01513300m, 0.00000010m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BTC, Asset.USDT, (0.00000100m, 10000000.00000000m, 0.00000100m), (650.94000000m, 65093.30000000m, 0.01000000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BTG, Asset.BTC, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.00040400m, 0.04037000m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BTG, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.01210000m, 1.20994000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BTS, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00114000m, 0.11360000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BTS, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000173m, 0.00017240m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.BTS, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00005155m, 0.00515440m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.CDT, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000025m, 0.00002460m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.CDT, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000734m, 0.00073400m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.CHAT, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000033m, 0.00003250m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.CHAT, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000972m, 0.00097120m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.CLOAK, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00003500m, 0.00350000m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.CLOAK, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00104800m, 0.10477000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.CMT, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00106000m, 0.10560000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.CMT, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000158m, 0.00015740m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.CMT, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00004694m, 0.00469400m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.CND, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00021800m, 0.02175000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.CND, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000033m, 0.00003250m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.CND, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000973m, 0.00097260m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.CVC, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00130000m, 0.12920000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.CVC, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000193m, 0.00019290m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.CVC, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00005752m, 0.00575180m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.DASH, Asset.BTC, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.00285300m, 0.28527000m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.DASH, Asset.ETH, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.08546000m, 8.54540000m, 0.00001000m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.DATA, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000050m, 0.00005000m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.DATA, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00001498m, 0.00149710m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.DENT, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000004m, 0.00000340m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.DENT, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000101m, 0.00010080m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.DGD, Asset.BTC, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.00055900m, 0.05581000m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.DGD, Asset.ETH, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.01669000m, 1.66870000m, 0.00001000m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.DLT, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00065000m, 0.06470000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.DLT, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000098m, 0.00009770m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.DLT, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00002927m, 0.00292690m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.DNT, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000036m, 0.00003590m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.DNT, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00001070m, 0.00106970m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.DOCK, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000028m, 0.00002780m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.DOCK, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000834m, 0.00083330m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.EDO, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00001340m, 0.00133100m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.EDO, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00039800m, 0.03976000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ELF, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000511m, 0.00051080m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ELF, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00015287m, 0.01528670m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ENG, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000923m, 0.00092280m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ENG, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00027590m, 0.02758400m, 0.00000010m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ENJ, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00068900m, 0.06888000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ENJ, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000103m, 0.00010260m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ENJ, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00003072m, 0.00307150m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.EOS, Asset.BNB, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.05690000m, 5.68200000m, 0.00010000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.EOS, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00008600m, 0.00859050m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.EOS, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00257300m, 0.25725000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.EOS, Asset.USDT, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.55890000m, 55.88450000m, 0.00010000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ETC, Asset.BNB, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.11280000m, 11.28000000m, 0.00010000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ETC, Asset.BTC, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.00017000m, 0.01699500m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ETC, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00509400m, 0.50932500m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ETC, Asset.USDT, (0.01000000m, 10000000.00000000m, 0.01000000m), (1.10550000m, 110.54250000m, 0.00010000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ETH, Asset.BTC, (0.00100000m, 100000.00000000m, 0.00100000m), (0.00333900m, 0.33389500m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ETH, Asset.USDT, (0.00001000m, 10000000.00000000m, 0.00001000m), (21.73000000m, 2172.25000000m, 0.01000000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.EVX, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000655m, 0.00065500m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.EVX, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00019620m, 0.01961800m, 0.00000010m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.FUEL, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000025m, 0.00002500m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.FUEL, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000747m, 0.00074660m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.FUN, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000025m, 0.00002420m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.FUN, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000727m, 0.00072630m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.GAS, Asset.BTC, (0.01000000m, 100000.00000000m, 0.01000000m), (0.00009800m, 0.00977000m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.GNT, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00158000m, 0.15800000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.GNT, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000239m, 0.00023820m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.GNT, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00007144m, 0.00714370m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.GO, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00033100m, 0.03306000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.GO, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000050m, 0.00004980m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.GRS, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000834m, 0.00083380m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.GRS, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00024931m, 0.02493100m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.GTO, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00068000m, 0.06800000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.GTO, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000103m, 0.00010240m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.GTO, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00003067m, 0.00306670m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.GVT, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00013900m, 0.01389250m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.GVT, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00415400m, 0.41535000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.GXS, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00002130m, 0.00212400m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.GXS, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00063700m, 0.06368000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.HC, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00003380m, 0.00337500m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.HC, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00101100m, 0.10106500m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.HOT, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000002m, 0.00000150m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.HOT, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000045m, 0.00004470m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Break, Asset.HSR, Asset.BTC, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.00007200m, 0.00713500m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Break, Asset.HSR, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00000100m, 100000.00000000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ICN, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000561m, 0.00056020m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ICN, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00016800m, 0.01680000m, 0.00000010m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ICX, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00650000m, 0.64920000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ICX, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00000980m, 0.00097500m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ICX, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00029200m, 0.02918000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ICX, Asset.USDT, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.06340000m, 6.33200000m, 0.00010000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.INS, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00000560m, 0.00055300m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.INS, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00016600m, 0.01660000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.IOST, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000019m, 0.00001850m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.IOST, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000554m, 0.00055370m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.IOTA, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00565000m, 0.56460000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.IOTA, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000853m, 0.00085300m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.IOTA, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00025497m, 0.02549630m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.IOTA, Asset.USDT, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.05550000m, 5.55000000m, 0.00010000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.IOTX, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000019m, 0.00001900m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.IOTX, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000567m, 0.00056630m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.KEY, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000010m, 0.00000930m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.KEY, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000278m, 0.00027720m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.KMD, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00001840m, 0.00183100m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.KMD, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00054800m, 0.05479000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.KNC, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000560m, 0.00055920m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.KNC, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00016780m, 0.01677600m, 0.00000010m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LEND, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000022m, 0.00002170m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LEND, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000647m, 0.00064690m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LINK, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000506m, 0.00050510m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LINK, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00015163m, 0.01516300m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LOOM, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00096000m, 0.09540000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LOOM, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000144m, 0.00014310m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LOOM, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00004281m, 0.00428090m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LRC, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000152m, 0.00015180m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LRC, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00004530m, 0.00452950m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LSK, Asset.BNB, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.03270000m, 3.26800000m, 0.00010000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LSK, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00004930m, 0.00493000m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LSK, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00147800m, 0.14774000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LTC, Asset.BNB, (0.00001000m, 10000000.00000000m, 0.00001000m), (0.61000000m, 60.80000000m, 0.01000000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LTC, Asset.BTC, (0.01000000m, 100000.00000000m, 0.01000000m), (0.00092000m, 0.09190500m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LTC, Asset.ETH, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.02759000m, 2.75820000m, 0.00001000m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LTC, Asset.USDT, (0.00001000m, 10000000.00000000m, 0.00001000m), (5.99000000m, 598.70000000m, 0.01000000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LUN, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00004880m, 0.00487700m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.LUN, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00145900m, 0.14588000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.MANA, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000116m, 0.00011560m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.MANA, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00003446m, 0.00344560m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.MCO, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.04542000m, 4.54110000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.MCO, Asset.BTC, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.00006800m, 0.00678000m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.MCO, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00202500m, 0.20249000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.MDA, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000666m, 0.00066560m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.MDA, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00020200m, 0.02019900m, 0.00000010m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.MFT, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00007200m, 0.00713000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.MFT, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000011m, 0.00001070m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.MFT, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000321m, 0.00032100m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.MOD, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00000990m, 0.00099000m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.MOD, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00029800m, 0.02977000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.MTH, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000043m, 0.00004260m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.MTH, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00001288m, 0.00128730m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.MTL, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00001070m, 0.00106600m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.MTL, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00032100m, 0.03201500m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NANO, Asset.BNB, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.02230000m, 2.22900000m, 0.00010000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NANO, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00003370m, 0.00336150m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NANO, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00100800m, 0.10075500m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NAS, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.01414000m, 1.41400000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NAS, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00002140m, 0.00213900m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NAS, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00064100m, 0.06406000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NAV, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00346000m, 0.34540000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NAV, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00000520m, 0.00051300m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NAV, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00015500m, 0.01547000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NCASH, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00005500m, 0.00545000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NCASH, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000009m, 0.00000830m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NCASH, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000248m, 0.00024780m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NEBL, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.01832000m, 1.83160000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NEBL, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00002810m, 0.00280900m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NEBL, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00084400m, 0.08439000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NEO, Asset.BNB, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.19100000m, 19.08000000m, 0.00100000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NEO, Asset.BTC, (0.01000000m, 100000.00000000m, 0.01000000m), (0.00028800m, 0.02871500m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NEO, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00859500m, 0.85944500m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NEO, Asset.USDT, (0.00100000m, 10000000.00000000m, 0.00100000m), (1.86900000m, 186.82000000m, 0.00100000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NPXS, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000003m, 0.00000230m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NPXS, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000067m, 0.00006660m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NULS, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.01183000m, 1.18280000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NULS, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00001784m, 0.00178370m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NULS, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00053333m, 0.05333250m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NULS, Asset.USDT, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.11580000m, 11.57600000m, 0.00010000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NXS, Asset.BNB, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.00840000m, 0.83800000m, 0.00010000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NXS, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00001270m, 0.00126500m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.NXS, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00037800m, 0.03775000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.OAX, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000284m, 0.00028320m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.OAX, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00008470m, 0.00846400m, 0.00000010m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.OMG, Asset.BTC, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.00005400m, 0.00532500m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.OMG, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00159000m, 0.15900000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ONT, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.01973000m, 1.97230000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ONT, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00002960m, 0.00295800m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ONT, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00088600m, 0.08859000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ONT, Asset.USDT, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.19300000m, 19.23000000m, 0.00100000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.OST, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00046000m, 0.04594000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.OST, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000068m, 0.00006800m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.OST, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00002043m, 0.00204250m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.PHX, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00013300m, 0.01326000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.PHX, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000021m, 0.00002010m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.PHX, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000604m, 0.00060390m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.PIVX, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.01035000m, 1.03490000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.PIVX, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00001570m, 0.00157000m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.PIVX, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00047200m, 0.04716000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.POA, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00082000m, 0.08200000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.POA, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000124m, 0.00012340m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.POA, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00003697m, 0.00369670m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.POE, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000016m, 0.00001540m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.POE, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000461m, 0.00046040m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.POLY, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00170000m, 0.17000000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.POLY, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000260m, 0.00025970m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.POWR, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00165000m, 0.16460000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.POWR, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000250m, 0.00024920m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.POWR, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00007432m, 0.00743160m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.PPT, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00004780m, 0.00477300m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.PPT, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00142900m, 0.14290000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.QKC, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000070m, 0.00007000m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.QKC, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00002100m, 0.00210000m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.QLC, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00052100m, 0.05204000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.QLC, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000079m, 0.00007810m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.QLC, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00002336m, 0.00233510m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.QSP, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00036500m, 0.03648000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.QSP, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000055m, 0.00005420m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.QSP, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00001629m, 0.00162830m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.QTUM, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.03837000m, 3.83630000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.QTUM, Asset.BTC, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.00005800m, 0.00576000m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.QTUM, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00172400m, 0.17235500m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.QTUM, Asset.USDT, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.37400000m, 37.33000000m, 0.00100000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.RCN, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00028400m, 0.02833000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.RCN, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000044m, 0.00004340m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.RCN, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00001288m, 0.00128770m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.RDN, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00449000m, 0.44840000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.RDN, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000669m, 0.00066890m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.RDN, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00020320m, 0.02031100m, 0.00000010m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.REP, Asset.BNB, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.13300000m, 13.21000000m, 0.00100000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.REP, Asset.BTC, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.00019900m, 0.01985000m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.REP, Asset.ETH, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.00599000m, 0.59900000m, 0.00001000m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.REQ, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000063m, 0.00006280m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.REQ, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00001874m, 0.00187400m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.RLC, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00384000m, 0.38310000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.RLC, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00000580m, 0.00057600m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.RLC, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00017300m, 0.01726000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Break, Asset.RPX, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000100m, 10000.00000000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Break, Asset.RPX, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000001m, 100000.00000000m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Break, Asset.RPX, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000001m, 100000.00000000m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SALT, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00000730m, 0.00072900m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SALT, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00021900m, 0.02182500m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SC, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00006300m, 0.00622000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SC, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000010m, 0.00000930m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SC, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000278m, 0.00027720m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SKY, Asset.BNB, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.03500000m, 3.45000000m, 0.00100000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SKY, Asset.BTC, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.00005200m, 0.00516000m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SKY, Asset.ETH, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.00155000m, 0.15410000m, 0.00001000m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SNGLS, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000036m, 0.00003520m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SNGLS, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00001057m, 0.00105700m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SNM, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000091m, 0.00009090m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SNM, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00002715m, 0.00271500m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SNT, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000057m, 0.00005690m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SNT, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00001702m, 0.00170180m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.STEEM, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00881000m, 0.88010000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.STEEM, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00001330m, 0.00132700m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.STEEM, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00040000m, 0.03991000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.STORJ, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000410m, 0.00040980m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.STORJ, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00012220m, 0.01221500m, 0.00000010m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.STORM, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00008200m, 0.00818000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.STORM, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000013m, 0.00001230m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.STORM, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000365m, 0.00036500m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.STRAT, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00002360m, 0.00235300m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.STRAT, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00070300m, 0.07021000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SUB, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000179m, 0.00017810m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SUB, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00005355m, 0.00535460m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SYS, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00090000m, 0.08970000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SYS, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000135m, 0.00013500m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.SYS, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00004021m, 0.00402010m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.THETA, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00092000m, 0.09120000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.THETA, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000137m, 0.00013620m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.THETA, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00004092m, 0.00409160m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.TNB, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000014m, 0.00001390m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.TNB, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000415m, 0.00041490m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.TNT, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000040m, 0.00003960m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.TNT, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00001187m, 0.00118630m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.TRIG, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00257000m, 0.25630000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.TRIG, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00000390m, 0.00038500m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.TRIG, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00011600m, 0.01151000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.TRX, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00021900m, 0.02182000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.TRX, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000033m, 0.00003290m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.TRX, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000986m, 0.00098540m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.TRX, Asset.USDT, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00215000m, 0.21420000m, 0.00001000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.TUSD, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.01023000m, 1.02220000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.TUSD, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00001542m, 0.00154200m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.TUSD, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00046182m, 0.04618180m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.TUSD, Asset.USDT, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.10040000m, 10.03400000m, 0.00010000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Break, Asset.VEN, Asset.BNB, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.01510000m, 1.50150000m, 0.00010000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Break, Asset.VEN, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000001m, 100000.00000000m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Break, Asset.VEN, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000001m, 100000.00000000m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Break, Asset.VEN, Asset.USDT, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.18430000m, 18.42100000m, 0.00010000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.VET, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00014000m, 0.01320000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.VET, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000020m, 0.00001970m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.VET, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000591m, 0.00059020m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.VET, Asset.USDT, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00128000m, 0.12790000m, 0.00001000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.VIA, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00629000m, 0.62860000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.VIA, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00000950m, 0.00094900m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.VIA, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00028500m, 0.02844000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.VIB, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000058m, 0.00005780m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.VIBE, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000117m, 0.00011660m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.VIBE, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00003470m, 0.00346300m, 0.00000010m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.VIB, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00001725m, 0.00172500m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.WABI, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00214000m, 0.21340000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.WABI, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000325m, 0.00032450m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.WABI, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00009684m, 0.00968370m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.WAN, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00926000m, 0.92600000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.WAN, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00001390m, 0.00138300m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.WAN, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00041400m, 0.04135000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.WAVES, Asset.BNB, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.02210000m, 2.20500000m, 0.00010000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.WAVES, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00003350m, 0.00334300m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.WAVES, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00099900m, 0.09988000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.WINGS, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000220m, 0.00021920m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.WINGS, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00006550m, 0.00654200m, 0.00000010m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.WPR, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000039m, 0.00003870m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.WPR, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00001165m, 0.00116460m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.WTC, Asset.BNB, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.02880000m, 2.87900000m, 0.00010000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.WTC, Asset.BTC, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00004310m, 0.00430600m, 0.00000010m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.WTC, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00128500m, 0.12847000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XEM, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00096000m, 0.09510000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XEM, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000144m, 0.00014370m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XEM, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00004326m, 0.00432540m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XLM, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00254000m, 0.25310000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XLM, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000381m, 0.00038040m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XLM, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00011375m, 0.01137430m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XLM, Asset.USDT, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.02479000m, 2.47810000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XMR, Asset.BTC, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.00173300m, 0.17330000m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XMR, Asset.ETH, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.05197000m, 5.19690000m, 0.00001000m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XRP, Asset.BNB, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.00541000m, 0.54040000m, 0.00001000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XRP, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000818m, 0.00081710m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XRP, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00024470m, 0.02446990m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XRP, Asset.USDT, (0.10000000m, 90000000.00000000m, 0.10000000m), (0.05318000m, 5.31800000m, 0.00001000m), 10.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XVG, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000022m, 0.00002160m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XVG, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000648m, 0.00064760m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XZC, Asset.BNB, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.10300000m, 10.24000000m, 0.00100000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XZC, Asset.BTC, (0.01000000m, 10000000.00000000m, 0.01000000m), (0.00015300m, 0.01529000m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.XZC, Asset.ETH, (0.01000000m, 90000000.00000000m, 0.01000000m), (0.00456100m, 0.45605000m, 0.00000100m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.YOYO, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00026500m, 0.02645000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.YOYO, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000040m, 0.00003970m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.YOYO, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00001196m, 0.00119540m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ZEC, Asset.BTC, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.00204200m, 0.20416000m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ZEC, Asset.ETH, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.06107000m, 6.10620000m, 0.00001000m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ZEN, Asset.BNB, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.16700000m, 16.66000000m, 0.00100000m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ZEN, Asset.BTC, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.00025200m, 0.02519000m, 0.00000100m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ZEN, Asset.ETH, (0.00100000m, 10000000.00000000m, 0.00100000m), (0.00751000m, 0.75050000m, 0.00001000m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ZIL, Asset.BNB, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00035100m, 0.03503000m, 0.00000100m), 1.00000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ZIL, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000053m, 0.00005290m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ZIL, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00001586m, 0.00158530m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ZRX, Asset.BTC, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00000972m, 0.00097200m, 0.00000001m), 0.00100000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                        new Symbol(SymbolStatus.Trading, Asset.ZRX, Asset.ETH, (1.00000000m, 90000000.00000000m, 1.00000000m), (0.00029063m, 0.02906270m, 0.00000001m), 0.01000000m, true, new List<OrderType> {OrderType.Limit,OrderType.LimitMaker,OrderType.Market,OrderType.StopLossLimit,OrderType.TakeProfitLimit}),
                    });

                // Redirect (BCH) Bitcoin Cash (BCC = BitConnect)
                Cache.Set("BCHUSDT", Cache.Get("BCCUSDT"));
                Cache.Set("BCHBNB", Cache.Get("BCCBNB"));
                Cache.Set("BCHBTC", Cache.Get("BCCBTC"));
                Cache.Set("BCHETH", Cache.Get("BCCETH"));
            }
            catch (Exception e)
            {
                Console.Error?.WriteLine($"{nameof(Binance)}.{nameof(Symbol)}(): \"{e.Message}\"");
            }
        }

        /// <summary>
        /// Constructor.
        /// </summary>
        /// <param name="status">The symbol status.</param>
        /// <param name="baseAsset">The symbol base asset.</param>
        /// <param name="quoteAsset">The symbol quote asset.</param>
        /// <param name="quantity">The minimum, maximum, and incremental quantity values.</param>
        /// <param name="price">The minimum, maximum, and incremental price values.</param>
        /// <param name="notionalMinimumValue">The minimum notional value.</param>
        /// <param name="isIcebergAllowed">The flag indicating if iceberg orders are allowed.</param>
        /// <param name="orderTypes">The list of allowed order types.</param>
        public Symbol(SymbolStatus status, Asset baseAsset, Asset quoteAsset, InclusiveRange quantity, InclusiveRange price, decimal notionalMinimumValue, bool isIcebergAllowed, IEnumerable<OrderType> orderTypes)
        {
            Throw.IfNull(baseAsset, nameof(baseAsset));
            Throw.IfNull(quoteAsset, nameof(quoteAsset));
            Throw.IfNull(quantity, nameof(quantity));
            Throw.IfNull(price, nameof(price));
            Throw.IfNull(orderTypes, nameof(orderTypes));

            Status = status;

            BaseAsset = baseAsset;
            QuoteAsset = quoteAsset;

            Quantity = quantity;
            Price = price;

            NotionalMinimumValue = notionalMinimumValue;
            IsIcebergAllowed = isIcebergAllowed;
            OrderTypes = orderTypes;

            _symbol = string.Intern($"{baseAsset}{quoteAsset}");
        }

        #endregion Constructors

        #region Public Methods

        /// <summary>
        /// Verify that symbol is valid. If fails, but known to be valid,
        /// call UpdateCacheAsync() to get the latest symbols.
        /// </summary>
        /// <param name="symbol"></param>
        /// <returns></returns>
        public static bool IsValid(string symbol)
        {
            if (string.IsNullOrWhiteSpace(symbol))
                return false;

            symbol = symbol.FormatSymbol();

            return Cache.Get(symbol) == symbol;
        }

        /// <summary>
        /// Update the symbol cache and asset cache.
        /// </summary>
        /// <param name="api"></param>
        /// <param name="token"></param>
        /// <returns></returns>
        public static async Task UpdateCacheAsync(IBinanceApi api, CancellationToken token = default)
        {
            var symbols = await api.GetSymbolsAsync(token)
                .ConfigureAwait(false);

            Cache.Clear();
            Cache.Set(symbols);
            AddCacheRedirections();

            var assets = new List<Asset>();

            foreach (var symbol in symbols)
            {
                if (!assets.Contains(symbol.BaseAsset))
                    assets.Add(symbol.BaseAsset);

                if (!assets.Contains(symbol.QuoteAsset))
                    assets.Add(symbol.QuoteAsset);
            }

            Asset.Cache.Clear();
            Asset.Cache.Set(assets);
            Asset.AddCacheRedirections();
        }

        public override string ToString()
        {
            return _symbol;
        }

        public override bool Equals(object obj)
        {
            // ReSharper disable once ConvertIfStatementToSwitchStatement
            if (obj == null)
                return false;

            if (obj is Symbol symbol)
                return Equals(symbol);

            return _symbol.Equals(obj);
        }

        public override int GetHashCode()
        {
            return _symbol.GetHashCode();
        }

        #endregion Public Methods

        #region Private Methods

        private static void AddCacheRedirections()
        {
            // Redirect (BCH) Bitcoin Cash (BCC = BitConnect)
            Cache.Set("BCH_USDT", Cache.Get("BCC_USDT"));
            Cache.Set("BCH_BNB", Cache.Get("BCC_BNB"));
            Cache.Set("BCH_BTC", Cache.Get("BCC_BTC"));
            Cache.Set("BCH_ETH", Cache.Get("BCC_ETH"));
        }

        #endregion Private Methods

        #region IComparable<Symbol>

        public int CompareTo(Symbol other)
        {
            return other == null ? 1 : string.Compare(_symbol, other._symbol, StringComparison.Ordinal);
        }

        #endregion IComparable<Symbol>

        #region IEquatable<Symbol>

        public bool Equals(Symbol other)
        {
            return CompareTo(other) == 0;
        }

        #endregion IEquatable<Symbol>
    }
}
